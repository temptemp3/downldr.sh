#!/bin/bash
## downldr
## - multipart file downloader
## version 0.0.2 - skip if downloaded previously
##################################################
. ${SH2}/sanitize.sh
. ${SH2}/cecho.sh
car() {
  echo ${1}
}
downldr-part-curl() {
  curl \
  ${src} \
  -r $(( ${i}*${chunk_size} ))-$(( ( (${i}+1)*${chunk_size} ) - 1 )) \
  -k \
  --max-time 60 \
  -o ${src_base}-part${i} 
}
downldr-part() {
  cecho yellow i: ${i}
  test -f "${src_base}-part${i}" && {
    test $( car $( du -d 0 -b ${src_base}-part${i} ) ) -eq ${chunk_size} && {
      cecho green already downloaded
      cecho green skipping ...
    true
    } || {
      cecho green downloading part ...
      ${FUNCNAME}-curl
      cecho green part downloaded
    }
  true
  } || {
    cecho green downloading part ...
    ${FUNCNAME}-curl
    cecho green part downloaded
  }
}
downldr-wait() {
  cat ${src_base}-part{0..1024} > ${src_base} 2>/dev/null
  du -d 0 -h  ${src_base}
}
downldr() {
  test ! -d "${src_title}" || {
    cecho yellow downloaded previously
    cecho green skipping
    return
  }
  local src_base
  src_base="${src_title}/$( basename ${src} )"
  cecho yellow $( mkdir -v ${src_title} )
  local i
  i=0
  while [ $(( i * ${chunk_size} )) -lt ${src_content_length} ]
  do
   ${FUNCNAME}-part
   i=$(( ${i} + 1 ))
  done &
  while [ ! ]
  do
    { 
      sleep 30
      ${FUNCNAME}-wait
    }
    test "$( jobs -pr )" || { 
      ${FUNCNAME}-wait
      break
    }
  done
  cecho green Done
}
##################################################
if [ ${#} -eq 4 ] 
then
 src="${1}"
 src_title=$( sanitize $( echo ${2} | base64 -d ) )
 src_content_length="${3}"
 chunk_size="${4}"
else
 exit 1 # wrong args
fi
##################################################
downldr
##################################################
## generated by create-stub2.sh v0.1.1
## on Sun, 20 Jan 2019 22:15:40 +0900
## see <https://github.com/temptemp3/sh2>
##################################################
